version: "2"

services:
  
  db:
    image: postgres:${POSTGRES_VERSION}
    container_name: centralperf-db
    environment:
      POSTGRES_USER: centralperf
      POSTGRES_PASSWORD: centralperf
      POSTGRES_DB: centralperf
    ports:
      - "5432:5432"
    volumes:
      - ./volumes/db/data:/var/lib/postgresql/data

  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION}
    container_name: centralperf-es
    environment:
      node.name: centralperf
      cluster.name: es-centralperf-cluster
      cluster.initial_master_nodes: centralperf
      bootstrap.memory_lock: "true"
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - ./volumes/es/data:/usr/share/elasticsearch/data   
    
  kibana:
    image: docker.elastic.co/kibana/kibana:${ELASTIC_VERSION}
    container_name: centralperf-kibana
    environment:
      ELASTICSEARCH_HOSTS: http://centralperf-es:9200
      TELEMETRY_ENABLED: "false"
    ports:
      - "5601:5601"
    depends_on:
      - es
    
  centralperf:
    image: centralperf:${CENTRALPERF_VERSION}
    build:
      context: ../../..
      dockerfile: ./src/main/docker/centralperf/Dockerfile
      args:
        CENTRALPERF_VERSION: ${CENTRALPERF_VERSION}
    container_name: centralperf-webapp
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # To allow control of jMeter containers in CentralPerf
    ports:
      - "8080:8080"
    depends_on:
      - db
      - es
      - kibana
  
  