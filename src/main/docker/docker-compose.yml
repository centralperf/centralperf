version: "2.1"

services:

  traefik:
    image: traefik:${TRAEFIK_VERSION}
    container_name: centralperf-traefik
    command: "--api.insecure=true --providers.docker=true --providers.docker.exposedbydefault=false --entrypoints.web.address=:80"
    environment:
      HTTP_PROXY: ""
      HTTPS_PROXY: ""
      NO_PROXY: "*"
    ports:
      - "${TRAEFIK_PORT}:80"
      - "${TRAEFIK_ADMIN_PORT}:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  db:
    image: postgres:${POSTGRES_VERSION}
    container_name: centralperf-db
    environment:
      POSTGRES_USER: centralperf
      POSTGRES_PASSWORD: centralperf
      POSTGRES_DB: centralperf
    ports:
      - "5432:5432"
    volumes:
      - ./volumes/db/data:/var/lib/postgresql/data

  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION}
    container_name: centralperf-es
    environment:
      node.name: centralperf
      cluster.name: es-centralperf-cluster
      cluster.initial_master_nodes: centralperf
      cluster.routing.allocation.disk.threshold_enabled: "false"
      xpack.monitoring.collection.enabled: "true"
      bootstrap.memory_lock: "true"
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./volumes/es/data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: ["CMD", "curl","-s" ,"-f", "http://localhost:9200/_cat/health"]
    
  kibana:
    image: docker.elastic.co/kibana/kibana:${ELASTIC_VERSION}
    container_name: centralperf-kibana
    environment:
      ELASTICSEARCH_HOSTS: http://centralperf-es:9200
      TELEMETRY_ENABLED: "false"
      SERVER_BASEPATH: "/kibana"
      SERVER_REWRITEBASEPATH: "true"
    depends_on:
      es:  { condition: service_healthy }
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.centralperf-kibana.rule=PathPrefix(`/kibana`)"
      - "traefik.http.routers.centralperf-kibana.entrypoints=web"
    ports:
      - "5601:5601"
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://localhost:5601/kibana/login"]
      retries: 6
    
  centralperf:
    image: centralperf:${CENTRALPERF_VERSION}
    build:
      context: ../../..
      dockerfile: ./src/main/docker/centralperf/${DEPLOY_CENTRALPERF_FROM}.Dockerfile
      args:
        CENTRALPERF_VERSION: ${CENTRALPERF_VERSION}
    container_name: centralperf-webapp
    environment:
      SPRING_PROFILES_ACTIVE: docker
      no_proxy: es, kibana
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro" # To allow control of jMeter containers in CentralPerf
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.centralperf-webapp.rule=PathPrefix(`/`)"
      - "traefik.http.routers.centralperf-webapp.entrypoints=web"
      - "traefik.http.services.centralperf-webapp.loadbalancer.server.port=8080"
    depends_on:
      db:  { condition: service_started }
      es:  { condition: service_healthy }
      kibana:  { condition: service_healthy }

  spring-boot-admin:
    container_name: centralperf-boot-admin
    image: slydeveloper/spring-boot-admin
    volumes:
      - "./spring-boot-admin/application-docker.properties:/opt/spring-boot-admin-docker/application-docker.properties"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.centralperf-boot-admin.rule=PathPrefix(`/boot-admin`)"
      - "traefik.http.routers.centralperf-boot-admin.entrypoints=web"
      - "traefik.http.services.centralperf-boot-admin.loadbalancer.server.port=1111"
    ports:
      - "1111:1111"