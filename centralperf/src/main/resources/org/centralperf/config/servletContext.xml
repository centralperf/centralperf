<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/mvc 
           http://www.springframework.org/schema/mvc/spring-mvc.xsd

		http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd           
           ">
	
	<!-- Import properties from parent context  -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="properties" ref="appProperties" />
	</bean>
	
	<!-- Allows lazy loading in views -->
	<mvc:interceptors>
    	<bean class="org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor"/>
	</mvc:interceptors>

	<!-- @Controller, @Service, @Configuration, etc. -->
	<context:component-scan base-package="org.centralperf" />
	<mvc:annotation-driven />
	
	<!-- Public resources -->
	<mvc:resources mapping="/resources/**" location="/public-resources/"/>
	<mvc:resources location="/resources/favicon.ico" mapping="/favicon.ico"/>	
	
	<!-- Allows to upload files -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>
	
	<!-- Freemarker configuration -->
	<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/views/ftl/"/>
		<property name="freemarkerSettings">
			<props>
		    	<prop key="template_update_delay">#{'${server.mode}' == 'dev' ? '${freemarker.template_update_delay.dev}' : '${freemarker.template_update_delay}'}</prop>
		        <prop key="default_encoding">UTF-8</prop>
			</props>
		</property>		
    </bean>
     
    <!-- 
      View resolvers can also be configured with ResourceBundles or XML files. If you need
      different view resolving based on Locale, you have to use the resource bundle resolver.
    -->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
    	<property name="order" value="2" />
	  <property name="mediaTypes">
	    <map>
	      <entry key="json" value="application/json"/>
	      <entry key="xsl" value="application/xml"/>
	    </map>
	  </property>
	  <property name="viewResolvers">
	    <list>
			<bean id="XSLTViewResolver" class="org.springframework.web.servlet.view.xslt.XsltViewResolver">
			    <property name="prefix" value="/WEB-INF/views/xsl/" />
			    <property name="contentType" value="application/xml" />
			    <!-- only for development -->
			    <property name="cacheTemplates" value="#{'${server.mode}' == 'dev' ? ${xsl.cacheTemplates.dev} : ${xsl.cacheTemplates}}" />
			</bean>		    
	    </list>
	  </property>    
	  <property name="defaultViews">
	    <list>
	      <bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
	        <property name="prefixJson" value="true"/>
	      </bean>
	    </list>
	  </property>
	</bean>
	
 	<bean id="FreemarkerViewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
 		<property name="order" value="1" />
		<property name="cache" value="true"/>
		<property name="prefix" value=""/>
		<property name="suffix" value=".ftl"/>
		<property name="requestContextAttribute" value="rc"/>
		<property name="contentType" value="text/html;charset=UTF-8" />
	</bean>	
</beans>