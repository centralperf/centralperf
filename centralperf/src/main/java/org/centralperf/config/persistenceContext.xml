<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:data-jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc	
	http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/data/jpa
    http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
	">

	<!-- Pool de connection -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${db.driver}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.login}" />
		<property name="password" value="${db.password}" />
		<property name="maxIdle" value="10" />
		<property name="maxActive" value="100" />
		<property name="maxWait" value="10000" />
		<property name="testOnBorrow" value="false" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="1200000" />
		<property name="minEvictableIdleTimeMillis" value="1800000" />
		<property name="numTestsPerEvictionRun" value="5" />
	</bean>

	<!-- EntityFactory -->
	<bean class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" id="entityManagerFactory">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
			<list>
				<value>org.centralperf.model</value>
			</list>
		</property>
		<property name="jpaVendorAdapter" ref="jpaAdapter" />
		<property name="jpaPropertyMap">
			<map>
				<entry key="hibernate.cache.use_second_level_cache" value="false" />
				<entry key="hibernate.cache.use_query_cache" value="false" />
				<entry key="hibernate.show_sql" value="#{'${server.mode}' == 'dev' ? ${db.persistence.showSql.dev} : ${db.persistence.showSql}}" />
				<entry key="hibernate.use_sql_comments" value="true" />
				<entry key="hibernate.format_sql" value="${db.hibernate.format_sql}" />
				<entry key="hibernate.dialect" value="${db.sqlDialect}" />
				<entry key="hibernate.hbm2ddl.auto" value="update"/>
            	<entry key="hibernate.connection.useUnicode" value="true" />
            	<entry key="hibernate.connection.characterEncoding" value="UTF-8" />				
			</map>
		</property>
	</bean>

	<!-- Adapter JPA pour Hibernate -->
	<bean id="jpaAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="showSql" value="#{'${server.mode}' == 'dev' ? ${db.persistence.showSql.dev} : ${db.persistence.showSql}}" />
		<property name="generateDdl" value="true" />
		<property name="databasePlatform" value="${db.sqlDialect}" />
	</bean>

	<!-- Process @PersistenceContext to inject entity manager factory http://static.springframework.org/spring/docs/2.1.x/reference/orm.html#orm-jpa-straight http://static.springframework.org/spring/docs/2.1.x/api/org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor.html 
		Note: this post processor is implicitly supplied by context:annotation-config or context:component-scan, however, we explicitly choose not to use those mechanisms 
		as they encourge dependency lookup (versus the more flexible dependency injection) -->
	<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<!-- Gestionnaire de transactions -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<data-jpa:repositories base-package="org.centralperf.repository" />
</beans>